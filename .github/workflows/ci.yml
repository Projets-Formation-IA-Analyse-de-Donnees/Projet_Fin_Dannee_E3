name: CI Pipeline

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Environment and Debug Files
        run: |
          echo "QDRANT_HOST=qdrant" >> .env
          echo "QDRANT_PORT=6333" >> .env
          echo "URL_ARTICLE=http://dummy-url.com" >> .env
          echo "API_KEY_ETL=dummy-key" >> .env
          echo "API_KEY=super-secret-test-key" >> .env
          grep -v 'external: true' docker-compose.yml > docker-compose.tmp && mv docker-compose.tmp docker-compose.yml

      - name: Display Debug Information
        run: |
          echo "--- Displaying modified docker-compose.yml ---"
          cat docker-compose.yml
          echo "--- Displaying app/routes/search.py ---"
          cat app/routes/search.py

      - name: Build and Start Services
        run: |
          docker compose build --no-cache
          docker compose up -d

      - name: Wait for Services
        run: sleep 20

      - name: Initialize Database with Mocked Data
        run: 'docker compose exec flask_model python -c "import startup, json, logging; from unittest.mock import patch; logging.basicConfig(level=logging.INFO); with patch(''startup.get_all_articles_from_api'', new=lambda: json.load(open(''app/test_data.json''))) as mock: startup.initialize_vector_index()"'

      - name: Run Pytest
        run: docker compose exec flask_model pytest --cov=app

      - name: Stop Services
        if: always()
        run: docker compose down