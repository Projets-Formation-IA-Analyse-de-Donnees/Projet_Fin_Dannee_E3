name: CI Pipeline - Tests de l'API IA

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "QDRANT_HOST=${{ secrets.QDRANT_HOST }}" >> .env
          echo "QDRANT_PORT=${{ secrets.QDRANT_PORT }}" >> .env
          echo "URL_ARTICLE=${{ secrets.URL_ARTICLE }}" >> .env
          echo "API_KEY_ETL=${{ secrets.API_KEY_ETL }}" >> .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env

      # NOUVELLE APPROCHE ROBUSTE avec 'grep'
      - name: Remove 'external: true' from docker-compose.yml
        # Explication :
        # 1. `grep -v 'external: true' docker-compose.yml` : Sélectionne toutes les lignes SAUF celle contenant 'external: true'.
        # 2. `> docker-compose.tmp` : Écrit le résultat dans un fichier temporaire.
        # 3. `&& mv docker-compose.tmp docker-compose.yml` : Si la première commande réussit, remplace l'original par le temporaire.
        run: grep -v 'external: true' docker-compose.yml > docker-compose.tmp && mv docker-compose.tmp docker-compose.yml

      # Étape de débogage pour vérifier la modification
      - name: Display modified docker-compose.yml
        run: |
          echo "--- Content of docker-compose.yml after modification: ---"
          cat docker-compose.yml
      
      # Les commandes suivantes restent inchangées
      - name: Build and start containers
        run: docker compose up -d --build

      - name: Wait for services to be ready
        run: sleep 15

      - name: Lancer les tests avec pytest
        run: docker compose exec flask_model pytest --cov=app

      - name: Stop containers
        if: always()
        run: docker compose down